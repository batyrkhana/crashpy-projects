Variable Are Labels
    Variable are better thought of as labels that can be assigned to values

2.1. Simple Message: Assign a mesage to a variable and then print that message
2.2. Simple Messages: assign a message to a variable and then print that message then change the value of the variable to a new message and print the new message

Strings

"This is a string"
'This is also a string'

Changing Case in a String with Methods
    name = "ada lovelace"
    print(name.title())
    the output will be the same string but fully capitalized
Methods:
    name.upper()
    name.lower()
    name.title()

Using Variables in Strings
    can be done with the help of    f strings
Adding Whitespace to Strings with Tabs or Newlines
    whitespace is any nonprinting characters usch as spaces, tabs, and end-of line symbols. 
    Whitespace can be used to organize my output so its easier for users to read
    To add a whitespace (indent) (you need to add a \t ):
        print("\tSomething")
    To add a newline(you need to add a \n ):
        print()
Stripping a whitespace
    .rstrip() method to get rid of a whitespace from the right
    .lstrip() method to get rid of a whitespace from the left
    .strip() method to get rid of a whitespace from both right and left
Removing a prefix/suffix example:
    .removeprefix('https://') method
    .removesuffix() method
Numbers
    Integers:
        Add:        2+3
        Subtract:   3-2
        Multiply:   2*3
        Divide:     3/2
        Exponents:  3 ** 2
Floats:
    Any number with a decimal point
        0.1 + 0.1
Integers and flaots:
    Dividing any two numbers will always result in a Floats
Underscores in Numbers:
    When writing long numbers, you can group digits using underscores to maek large numbers more readable
        universe_age = 14_000_000_000
    When printed, python only displays the digits with no underscores
Multiple Assignment:
    You can assign values to more than one variabke using a single line of code
    x, y, z = 0, 0, 0
        this means that the variables x, y, z are initialized as 0
Constants:
    A variable whose value stays the same throughotu teh life of a program
    ALL CAPITAL LETTERS INDICATE A VARIABLE SHOULD BE TREATED AS A CONSTANT AND NEVER CHANGED
    MAX_CONNECTIONS = 5000
Lists:
    A collection of items in a particular order
    Python uses brackets to indicate a list []
    favorite_books = ['irish revolution', 'napoleon', 'economics']
    if you print a list you get the list and the square brackets
        ['irish revolution', 'napoleon', 'economics']
Accessing Elements of a list: 
    to access an element in a list, write the name of the list followed by the index of the item enclosed in square brackets
    print(favorite_books[0])
        the return will be: irish revolution    
    you an use different methods on top
    print(favorite_books[0].title())
        the result will be Irish Revolution
    index positions start at 0 not at 1
    negative postion value will give the list item from the back of the list
Modifying Elements in a list:
    favorite_books = ['irish revolution', 'napoleon', 'economics']
    favorite_books[0] = 'american revolution'
Appending elements to the end of the list 
    .append() method
Inserting into a certain poition in a list
   .insert() method
To erase the item from a list   
    use del statement
        for example:
            del favorite_books[0] will delete the initial position in the list 
To take a value from a list and use it
    .pop([0]) method ; just replace 0 with some index in a list
Remove item by value: (if you do not know the position but know what to remove)
    .remove('motorcycle')
Sorting a list permanently with sort() method
    .sort() method to sort alphabetically
    .sort(reverse=True) method to sort alphabetically backwards
Sorting a list temporarily with sorted() method
    .sorted() method will let you display the list in a certain order but doesn't affec tthe actual order of the list
    .sorted(reverse=Trued) method to sort alphabetically backwards
Sorting a list in reverse order with reverse() method
    .reverse() method
Finding length of a list with len() function
    len([]) function will give you the length of the list
Avoiding Index errors when working with lists









